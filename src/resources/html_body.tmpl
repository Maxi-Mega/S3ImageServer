{{define "html_body"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <title>{{.WindowTitle}}</title>
        <meta charset="utf-8">
        <style>
            body {
                margin: 10px 10px 0;
                padding-top: 15px;
                background-color: #1c1c1c;
                /*display: flex;
                justify-content: space-between;
                align-items: center;
                flex-flow: row wrap;*/
            }

            header {
                width: 100%;
                height: 20px;
                display: flex;
                position: fixed;
                left: 0;
                top: 0;
                padding: 10px;
                background-color: #393939;
                justify-content: space-between;
                z-index: 10;
            }

            .filters {
                display: flex;
                align-items: center;
                color: #e4d3c1;
            }

            .filters .img-group-dropdown {
                margin-left: 30px;
                color: #e4d3c1;
                font-size: 14px;
                -webkit-user-select: none; /* Chrome all / Safari all */
                -moz-user-select: none; /* Firefox all */
                -ms-user-select: none; /* IE 10+ */
                user-select: none;
            }

            .filters .img-group-dropdown:first-of-type {
                margin-left: 10px;
            }

            .filters .dropdown-title {
                cursor: pointer;
            }

            .filters .img-group-dropdown.selected .dropdown-title {
                color: white;
            }

            .filters .img-group-dropdown-content {
                display: none;
                flex-flow: column;
                position: absolute;
                background-color: #393939;
                padding-top: 5px;
                padding-left: 2px;
                transform: translateX(-2px);
            }

            .filters .img-group-dropdown.selected > .img-group-dropdown-content {
                display: flex;
            }

            .filters .img-group-dropdown-content label {
                padding-top: 5px;
                margin: 0 5px 5px 0;
            }

            header label {
                color: #e4d3c1;
                font-size: 14px;
            }

            #header-right {
                display: flex;
                align-items: center;
            }

            #header-right label {
                margin-left: 20px;
            }

            header label[for='scaler'] {
                display: flex;
                align-items: center;
                margin: 0;
            }

            #search {
                opacity: 0.5;
            }

            #img-count {
                margin-right: 20px;
            }

            #scaler-container {
                margin-right: 10px;
            }

            #scaler {
                max-width: 100px;
            }

            header #version {
                color: #e4d3c1;
                font-size: 12px;
                align-self: center;
                transform: translateX(-25%);
                margin-left: 30px;
            }

            .container {
                /*max-width: 100vw;
                display: grid;
                grid-template-columns: repeat(4, 1fr);*/
                display: flex;
                flex-flow: row wrap;
                justify-content: space-evenly;
                align-items: baseline;
            }

            .img-container {
                width: min-content;
                height: auto;
                margin: 20px 10px;
                display: grid;
                justify-content: center;
                text-align: center;
                /*transform: scale(0.9, 0.9);*/
                /*transition: all ease-in-out 1s;*/
            }

            .filter-hidden, .search-hidden {
                display: none;
            }

            img:not(#modal-img) {
                max-width: 22vw;
                cursor: pointer;
                /*animation: fadein ease-out 1s;*/
            }

            .img-title {
                margin-top: 5px;
                color: #e4d3c1;
                font-family: Arial, sans-serif;
                font-size: 10px;
                text-decoration: none;
            }

            .img-title:hover {
                text-decoration: underline;
            }

            #modal {
                z-index: 500;
                display: none;
                position: fixed;
                background-color: rgba(0, 0, 0, 0.5);
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                justify-content: space-around;
                align-items: center;
                font-family: "DejaVu Sans", sans-serif;
            }

            #modal .previous-next-image-container {
                position: absolute;
                top: 40px;
                right: 20px;
                margin-right: 5px;
            }

            #modal .previous-next-image-container > span {
                color: #bbbbbb;
                font-size: 2em;
                cursor: pointer;
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -khtml-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            #modal .previous-next-image-container > span:hover {
                color: white;
            }

            #modal .previous-next-image-container > span:active {
                font-weight: bold;
            }

            #modal-content {
                min-width: 50%;
                max-width: 90%;
                display: flex;
                flex-flow: row nowrap;
                align-items: center;
                justify-content: space-between;
            }

            #modal-img.show {
                z-index: 1000;
                border: 2px solid white;
                max-width: 50vw;
                max-height: 80vh;
                margin-right: 10px;
            }

            #modal-details {
                display: flex;
                flex-flow: column wrap;
                padding: 20px;
                margin-left: 10px;
                background-color: #959595;
                color: black;
                border: 2px solid white;
            }

            #geonames {
                margin-top: 0;
                margin-bottom: 20px;
                font-size: 13px;
                min-height: 150px;
                max-height: 207px;
                overflow-x: clip;
                overflow-y: auto;
                background-color: #bbb;
            }

            #modal-details h2 {
                max-width: max-content;
                margin-top: 0;
                margin-left: 50%;
                transform: translateX(-50%);
                font-size: 17px;
            }

            #modal-details h3 {
                margin: 5px 0;
                font-size: 13px;
                font-weight: normal;
            }

            #modal-details hr {
                border-bottom: 0;
                width: 50%;
            }

            #modal-links-title {
                margin-top: 10px !important;
            }

            #modal-links {
                width: 100%;
                max-height: 250px;
                margin: 0;
                padding: 0;
                overflow-y: auto;
            }

            #modal-links li {
                list-style-type: none;
                margin: 5px 0;
                font-size: 14px;
            }

            #modal-content a {
                color: black;
            }

            @keyframes fadein {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
        </style>
    </head>
    <body>
    <header>
        <div class="filters">
            {{range .ImageGroups}}
                {{$groupName := .GroupName}}
                <div class="img-group-dropdown">
                    <input class="check-all" type="checkbox" name="{{$groupName}}">
                    <span class="dropdown-title">{{.GroupName}}</span>
                    <div class="img-group-dropdown-content">
                        {{range .Types}}
                            <label>
                                <input type="checkbox" name="{{.Name}}" img-group="{{$groupName}}">
                                {{.DisplayName}}
                            </label>
                        {{end}}
                    </div>
                </div>
            {{end}}
        </div>
        <div id="header-right">
            <label for="search" style="padding-left: 50px">
                Search:
                <input id="search" type="text" size="15"
                       title="Included in image name, case insensitive">
            </label>
            <label id="img-count" title="visible/total"></label>
            <div id="scaler-container">
                <label for="scaler" title="Middleclick to reset">
                    <span>Scale:&nbsp;</span>
                    <input id="scaler" type="range" min="10" max="30" step="1">
                </label>
            </div>
            <div id="version">Version: {{.Version}}</div>
        </div>
    </header>
    <div class="container">
        {{- $basePath := .BasePath -}}
        {{range .Previews}}
            <div class="img-container" img-type="{{.ImgType}}" img-name="{{.ImgKey}}">
                <img src="{{$basePath}}/image/{{.ImgKey}}" alt="{{.ImgKey}}" title="{{.ImgKey}}"/>
                <br/>
                <a class="img-title" href="{{$basePath}}/image/{{.ImgKey}}" target="_blank"
                   title="Click to open the image in a new tab">{{.ImgName}}</a>
            </div>
        {{end}}
    </div>
    <div id="modal" title="Click to close">
        <div class="previous-next-image-container">
            <span id="previous-image-button" title="Previous image">&slarr;</span>
            <span id="next-image-button" title="Next image">&srarr;</span>
        </div>
        <div id="modal-content">
            <img id="modal-img" src="" alt=""/>
            <div id="modal-details">
                <h2 id="geonames-title">Place names</h2>
                <pre id="geonames"></pre>
                <h2>Characteristics</h2>
                <h3 id="modal-img-type"></h3>
                <h3 id="modal-img-name"></h3>
                <h3 id="modal-img-date"></h3>
                <h2 id="modal-links-title">Contents</h2>
                <ul id="modal-links" title="Click to open with external application">
                    <li>
                        <a href=""></a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <script>
        let currentImgWidth, currentFontSize;

        function countImages() {
            const visible = document.querySelectorAll("div.img-container:not(.filter-hidden):not(.search-hidden)").length;
            const total = document.querySelectorAll("div.img-container").length;
            document.getElementById("img-count").innerText = "(" + visible + " / " + total + ")";
        }

        function updateScale() {
            const scaler = document.getElementById("scaler");
            const imgWidth = (40 - scaler.value) + "vw";
            currentImgWidth = imgWidth;
            document.querySelectorAll("img:not(#modal-img)").forEach(img => img.style.maxWidth = imgWidth);
            const fontSize = Math.round(14 - scaler.value / 10) + "px";
            currentFontSize = fontSize;
            document.querySelectorAll("a.img-title").forEach(title => title.style.fontSize = fontSize);
        }

        function switchToImage(relativeIndex) {
            if (!modalImg.classList.contains("show")) {
                return;
            }
            const currentImageSrc = modalImg.src;
            const allImages = Array.from(document.querySelectorAll("div.img-container:not(.filter-hidden):not(.search-hidden)")).map(div => div.firstElementChild);

            for (let i = 0; i < allImages.length; i++) {
                if (allImages[i].src === currentImageSrc) {
                    const targetImageIndex = i + relativeIndex;
                    closeModal();
                    if (targetImageIndex < 0) {
                        modalize(allImages[allImages.length - 1]);
                    } else if (targetImageIndex >= allImages.length) {
                        modalize(allImages[0]);
                    } else {
                        modalize(allImages[targetImageIndex]);
                    }
                    return;
                }
            }
        }

        document.addEventListener("DOMContentLoaded", () => {

            document.querySelectorAll(".filters .img-group-dropdown").forEach(dropdown => {
                const span = dropdown.querySelector("span.dropdown-title");
                span.addEventListener("click", () => {
                    document.querySelectorAll(".filters .img-group-dropdown.selected").forEach(other => other !== dropdown ? other.classList.remove("selected") : null);
                    dropdown.classList.toggle("selected");
                });
                const input = dropdown.querySelector("input.check-all");
                input.checked = true;
                input.addEventListener("input", () => {
                    const checked = input.checked;
                    input.indeterminate = false;
                    dropdown.querySelectorAll(".img-group-dropdown-content input[type=checkbox]").forEach(inpt => {
                        inpt.checked = checked;
                    });
                    const groupName = input.getAttribute("name");
                    const children = Array.from(document.querySelectorAll(".filters .img-group-dropdown-content input[type=checkbox]")).filter(e => e.getAttribute("img-group") === groupName);
                    children.forEach(child => {
                        document.querySelectorAll(`div[img-type="${child.getAttribute("name")}"]`).forEach(container => {
                            if (checked) {
                                container.classList.remove("filter-hidden");
                            } else {
                                container.classList.add("filter-hidden");
                            }
                        });
                    });
                });
            });

            countImages();

            const scaler = document.getElementById("scaler");
            const scalerMinValue = 10;
            const scalerMaxValue = 30;
            const scalerInitialPercentage = {{.ScaleInitialPercentage}};
            const scalerInitialValue = scalerMinValue + ((scalerMaxValue - scalerMinValue) * scalerInitialPercentage / 100.0);
            currentImgWidth = scalerInitialValue;
            currentFontSize = "10px";
            console.log("scalerInitialPercentage:", scalerInitialPercentage, "/ scalerInitialValue:", scalerInitialValue);
            scaler.value = scalerInitialValue;
            scaler.addEventListener("input", updateScale);
            document.getElementById("scaler-container").addEventListener("auxclick", () => {
                scaler.value = scalerInitialValue;
                updateScale();
            });

            updateScale();

            document.getElementById("previous-image-button").addEventListener("click", (ev) => {
                ev.stopImmediatePropagation();
                switchToImage(-1);
            });
            document.getElementById("next-image-button").addEventListener("click", (ev) => {
                ev.stopImmediatePropagation();
                switchToImage(1);
            });
        });
    </script>
{{end}}